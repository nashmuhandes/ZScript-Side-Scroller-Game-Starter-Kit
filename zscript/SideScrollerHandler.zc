// Copyright 2006 - 2020 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
//
//
//===========================================================================

class SideScrollerHandler : EventHandler
{
	// setup the camera and other spawning stuff here
	// According to Graf Zahl, BeginPlay on the PlayerPawn is a bit unreliable
	// so we'll do our setup here in the PlayerEntered EventHandler
	// Source: https://mantis.zdoom.org/view.php?id=315#c745

	override void PlayerEntered(PlayerEvent e)
	{
		let pmo = SideScrollerPlayer(players[e.PlayerNumber].mo);
		if (pmo)
		{
			// spawn the camera
			pmo.SpawnCamera();
		}
	}

	// destroy the camera when this level is unloaded
	// in the case of hub levels, we don't want to spawn extra cameras
	// when the player returns to this level
    override void WorldUnloaded(WorldEvent e)
    {
		for (int i = 0; i < MAXPLAYERS; i++)
		{
			if (playeringame[i])
			{
				let pmo = SideScrollerPlayer(players[i].mo);
				if (pmo)
				{
					// destroy the camera
					pmo.DestroyCamera();
				}
			}
		}
	}
}
